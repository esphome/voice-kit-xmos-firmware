############################
Check Sample Rate Conversion
############################

*******
Purpose
*******

Description
===========

This test is a verification of the FFVA sample rate conversion feature.  It verify that 48kHx to 16kHz conversion has taken place on the input audio, and that output audio converted back to 48kHz and is within a certain maximum allowable difference of the 48kHz input.

Method
======

- A test build config is used that uses USB input as microphones, bypasses all the audio stages, and inputs and outputs 48kHz audio.
- A 48kHz, 2 channel sine wave input file is generated.  Channel 1 is a 1000Hz sine wave, channel 2 is 2000Hz.  
- After processing, the output file is compared to the input file using utilities from the XMOS `thdncalculator` Python module.  See `test_sample_rate_conversion.py` and https://github.com/xmos/audio_test_tools for more information.

Inputs
======

Input `wav` files are generated by `sox` in the `check_sample_rate_conversion.sh` script.  

Outputs
=======

Intermediate and output `wav` files are saved in the output directory for manual inspection if necessary.

**************************
Building and Running Tests
**************************

.. note::

    The Python environment is required to run this test.  See the Requirements section of test/README.rst

To build the test application firmware and filesystem files, run the following command from the top of the repository: 

.. code-block:: console

    bash tools/ci/build_tests.sh

The `build_test.sh` script will copy the test applications and filesystem files to the `dist` folder.

Run the test with the following command from the top of the repository:

.. code-block:: console

    bash test/sample_rate_conversion/check_sample_rate_conversion.sh <firmware> <path-to-output-dir>

All paths must be absolute.  Relative paths may cause errors.  

The output file can be verified via a pytest:

.. code-block:: console

    pytest test/sample_rate_conversion/test_sample_rate_conversion.py --wav_file <OUTPUT_WAV> --wav_duration <LENGTH>
